// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: config.proto

#ifndef PROTOBUF_config_2eproto__INCLUDED
#define PROTOBUF_config_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_config_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsVoiceConfigImpl();
void InitDefaultsVoiceConfig();
inline void InitDefaults() {
  InitDefaultsVoiceConfig();
}
}  // namespace protobuf_config_2eproto
namespace config {
class VoiceConfig;
class VoiceConfigDefaultTypeInternal;
extern VoiceConfigDefaultTypeInternal _VoiceConfig_default_instance_;
}  // namespace config
namespace config {

// ===================================================================

class VoiceConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:config.VoiceConfig) */ {
 public:
  VoiceConfig();
  virtual ~VoiceConfig();

  VoiceConfig(const VoiceConfig& from);

  inline VoiceConfig& operator=(const VoiceConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  VoiceConfig(VoiceConfig&& from) noexcept
    : VoiceConfig() {
    *this = ::std::move(from);
  }

  inline VoiceConfig& operator=(VoiceConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const VoiceConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VoiceConfig* internal_default_instance() {
    return reinterpret_cast<const VoiceConfig*>(
               &_VoiceConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(VoiceConfig* other);
  friend void swap(VoiceConfig& a, VoiceConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VoiceConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  VoiceConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const VoiceConfig& from);
  void MergeFrom(const VoiceConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(VoiceConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string voiceserver_address = 3;
  void clear_voiceserver_address();
  static const int kVoiceserverAddressFieldNumber = 3;
  const ::std::string& voiceserver_address() const;
  void set_voiceserver_address(const ::std::string& value);
  #if LANG_CXX11
  void set_voiceserver_address(::std::string&& value);
  #endif
  void set_voiceserver_address(const char* value);
  void set_voiceserver_address(const char* value, size_t size);
  ::std::string* mutable_voiceserver_address();
  ::std::string* release_voiceserver_address();
  void set_allocated_voiceserver_address(::std::string* voiceserver_address);

  // int32 sample_rate = 1;
  void clear_sample_rate();
  static const int kSampleRateFieldNumber = 1;
  ::google::protobuf::int32 sample_rate() const;
  void set_sample_rate(::google::protobuf::int32 value);

  // int32 mic_num = 2;
  void clear_mic_num();
  static const int kMicNumFieldNumber = 2;
  ::google::protobuf::int32 mic_num() const;
  void set_mic_num(::google::protobuf::int32 value);

  // int32 wakeup_sensitivity = 4;
  void clear_wakeup_sensitivity();
  static const int kWakeupSensitivityFieldNumber = 4;
  ::google::protobuf::int32 wakeup_sensitivity() const;
  void set_wakeup_sensitivity(::google::protobuf::int32 value);

  // int32 bargein_sensitivity = 5;
  void clear_bargein_sensitivity();
  static const int kBargeinSensitivityFieldNumber = 5;
  ::google::protobuf::int32 bargein_sensitivity() const;
  void set_bargein_sensitivity(::google::protobuf::int32 value);

  // int32 audo_outtype = 6;
  void clear_audo_outtype();
  static const int kAudoOuttypeFieldNumber = 6;
  ::google::protobuf::int32 audo_outtype() const;
  void set_audo_outtype(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:config.VoiceConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr voiceserver_address_;
  ::google::protobuf::int32 sample_rate_;
  ::google::protobuf::int32 mic_num_;
  ::google::protobuf::int32 wakeup_sensitivity_;
  ::google::protobuf::int32 bargein_sensitivity_;
  ::google::protobuf::int32 audo_outtype_;
  mutable int _cached_size_;
  friend struct ::protobuf_config_2eproto::TableStruct;
  friend void ::protobuf_config_2eproto::InitDefaultsVoiceConfigImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VoiceConfig

// int32 sample_rate = 1;
inline void VoiceConfig::clear_sample_rate() {
  sample_rate_ = 0;
}
inline ::google::protobuf::int32 VoiceConfig::sample_rate() const {
  // @@protoc_insertion_point(field_get:config.VoiceConfig.sample_rate)
  return sample_rate_;
}
inline void VoiceConfig::set_sample_rate(::google::protobuf::int32 value) {
  
  sample_rate_ = value;
  // @@protoc_insertion_point(field_set:config.VoiceConfig.sample_rate)
}

// int32 mic_num = 2;
inline void VoiceConfig::clear_mic_num() {
  mic_num_ = 0;
}
inline ::google::protobuf::int32 VoiceConfig::mic_num() const {
  // @@protoc_insertion_point(field_get:config.VoiceConfig.mic_num)
  return mic_num_;
}
inline void VoiceConfig::set_mic_num(::google::protobuf::int32 value) {
  
  mic_num_ = value;
  // @@protoc_insertion_point(field_set:config.VoiceConfig.mic_num)
}

// string voiceserver_address = 3;
inline void VoiceConfig::clear_voiceserver_address() {
  voiceserver_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& VoiceConfig::voiceserver_address() const {
  // @@protoc_insertion_point(field_get:config.VoiceConfig.voiceserver_address)
  return voiceserver_address_.GetNoArena();
}
inline void VoiceConfig::set_voiceserver_address(const ::std::string& value) {
  
  voiceserver_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:config.VoiceConfig.voiceserver_address)
}
#if LANG_CXX11
inline void VoiceConfig::set_voiceserver_address(::std::string&& value) {
  
  voiceserver_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:config.VoiceConfig.voiceserver_address)
}
#endif
inline void VoiceConfig::set_voiceserver_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  voiceserver_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:config.VoiceConfig.voiceserver_address)
}
inline void VoiceConfig::set_voiceserver_address(const char* value, size_t size) {
  
  voiceserver_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:config.VoiceConfig.voiceserver_address)
}
inline ::std::string* VoiceConfig::mutable_voiceserver_address() {
  
  // @@protoc_insertion_point(field_mutable:config.VoiceConfig.voiceserver_address)
  return voiceserver_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* VoiceConfig::release_voiceserver_address() {
  // @@protoc_insertion_point(field_release:config.VoiceConfig.voiceserver_address)
  
  return voiceserver_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void VoiceConfig::set_allocated_voiceserver_address(::std::string* voiceserver_address) {
  if (voiceserver_address != NULL) {
    
  } else {
    
  }
  voiceserver_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), voiceserver_address);
  // @@protoc_insertion_point(field_set_allocated:config.VoiceConfig.voiceserver_address)
}

// int32 wakeup_sensitivity = 4;
inline void VoiceConfig::clear_wakeup_sensitivity() {
  wakeup_sensitivity_ = 0;
}
inline ::google::protobuf::int32 VoiceConfig::wakeup_sensitivity() const {
  // @@protoc_insertion_point(field_get:config.VoiceConfig.wakeup_sensitivity)
  return wakeup_sensitivity_;
}
inline void VoiceConfig::set_wakeup_sensitivity(::google::protobuf::int32 value) {
  
  wakeup_sensitivity_ = value;
  // @@protoc_insertion_point(field_set:config.VoiceConfig.wakeup_sensitivity)
}

// int32 bargein_sensitivity = 5;
inline void VoiceConfig::clear_bargein_sensitivity() {
  bargein_sensitivity_ = 0;
}
inline ::google::protobuf::int32 VoiceConfig::bargein_sensitivity() const {
  // @@protoc_insertion_point(field_get:config.VoiceConfig.bargein_sensitivity)
  return bargein_sensitivity_;
}
inline void VoiceConfig::set_bargein_sensitivity(::google::protobuf::int32 value) {
  
  bargein_sensitivity_ = value;
  // @@protoc_insertion_point(field_set:config.VoiceConfig.bargein_sensitivity)
}

// int32 audo_outtype = 6;
inline void VoiceConfig::clear_audo_outtype() {
  audo_outtype_ = 0;
}
inline ::google::protobuf::int32 VoiceConfig::audo_outtype() const {
  // @@protoc_insertion_point(field_get:config.VoiceConfig.audo_outtype)
  return audo_outtype_;
}
inline void VoiceConfig::set_audo_outtype(::google::protobuf::int32 value) {
  
  audo_outtype_ = value;
  // @@protoc_insertion_point(field_set:config.VoiceConfig.audo_outtype)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace config

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_config_2eproto__INCLUDED
